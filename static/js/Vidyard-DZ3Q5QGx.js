var O=Object.defineProperty;var d=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,D=Object.prototype.propertyIsEnumerable;var h=(r,e,t)=>e in r?O(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,_=(r,e)=>{for(var t in e||(e={}))V.call(e,t)&&h(r,t,e[t]);if(d)for(var t of d(e))D.call(e,t)&&h(r,t,e[t]);return r};import{g as j,r as w}from"./react-BcmoR6v_.js";import{u as S,p as M}from"./playmv-CZfMhOu7.js";function A(r,e){for(var t=0;t<e.length;t++){const o=e[t];if(typeof o!="string"&&!Array.isArray(o)){for(const a in o)if(a!=="default"&&!(a in r)){const n=Object.getOwnPropertyDescriptor(o,a);n&&Object.defineProperty(r,a,n.get?n:{enumerable:!0,get:()=>o[a]})}}}return Object.freeze(Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}))}var E=Object.create,i=Object.defineProperty,L=Object.getOwnPropertyDescriptor,R=Object.getOwnPropertyNames,x=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty,N=(r,e,t)=>e in r?i(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,T=(r,e)=>{for(var t in e)i(r,t,{get:e[t],enumerable:!0})},P=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of R(e))!C.call(r,a)&&a!==t&&i(r,a,{get:()=>e[a],enumerable:!(o=L(e,a))||o.enumerable});return r},k=(r,e,t)=>(t=r!=null?E(x(r)):{},P(e||!r||!r.__esModule?i(t,"default",{value:r,enumerable:!0}):t,r)),K=r=>P(i({},"__esModule",{value:!0}),r),s=(r,e,t)=>(N(r,typeof e!="symbol"?e+"":e,t),t),m={};T(m,{default:()=>y});var g=K(m),c=k(w),f=S,v=M;const B="https://play.vidyard.com/embed/v4.js",F="VidyardV4",G="onVidyardAPI";class y extends c.Component{constructor(){super(...arguments),s(this,"callPlayer",f.callPlayer),s(this,"mute",()=>{this.setVolume(0)}),s(this,"unmute",()=>{this.props.volume!==null&&this.setVolume(this.props.volume)}),s(this,"ref",e=>{this.container=e})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}load(e){const{playing:t,config:o,onError:a,onDuration:n}=this.props,l=e&&e.match(v.MATCH_URL_VIDYARD)[1];this.player&&this.stop(),(0,f.getSDK)(B,F,G).then(p=>{this.container&&(p.api.addReadyListener((u,b)=>{this.player||(this.player=b,this.player.on("ready",this.props.onReady),this.player.on("play",this.props.onPlay),this.player.on("pause",this.props.onPause),this.player.on("seek",this.props.onSeek),this.player.on("playerComplete",this.props.onEnded))},l),p.api.renderPlayer(_({uuid:l,container:this.container,autoplay:t?1:0},o.options)),p.api.getPlayerMetadata(l).then(u=>{this.duration=u.length_in_seconds,n(u.length_in_seconds)}))},a)}play(){this.callPlayer("play")}pause(){this.callPlayer("pause")}stop(){window.VidyardV4.api.destroyPlayer(this.player)}seekTo(e,t=!0){this.callPlayer("seek",e),t||this.pause()}setVolume(e){this.callPlayer("setVolume",e)}setPlaybackRate(e){this.callPlayer("setPlaybackSpeed",e)}getDuration(){return this.duration}getCurrentTime(){return this.callPlayer("currentTime")}getSecondsLoaded(){return null}render(){const{display:e}=this.props,t={width:"100%",height:"100%",display:e};return c.default.createElement("div",{style:t},c.default.createElement("div",{ref:this.ref}))}}s(y,"displayName","Vidyard");s(y,"canPlay",v.canPlay.vidyard);const I=j(g),z=A({__proto__:null,default:I},[g]);export{z as V};
